name: Generate Wrapper & Build APK (No Local PC)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Maturin
        run: pip install maturin

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Use project-local Gradle cache to avoid runner permission/corrupt-cache issues
      - name: Use project-local Gradle cache
        run: echo "GRADLE_USER_HOME=$GITHUB_WORKSPACE/.gradle" >> $GITHUB_ENV

      # Clear potentially corrupt Gradle jars cache from runner (safe)
      - name: Clear possibly corrupt Gradle jars cache
        run: rm -rf ~/.gradle/caches/jars-9 || true

      - name: Download Gradle 8.13 temporarily
        run: wget https://services.gradle.org/distributions/gradle-8.13-bin.zip -O gradle-8.13-bin.zip

      - name: Unzip temporary Gradle
        run: unzip -q gradle-8.13-bin.zip

      # Generate wrapper using the temporary Gradle; use no-daemon + stacktrace for clearer errors
      - name: Generate project's Gradle Wrapper files
        run: ./gradle-8.13/bin/gradle wrapper --gradle-version 8.13 --distribution-type all --no-daemon --stacktrace

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Build using the generated wrapper, using project-local cache (from GITHUB_ENV)
      - name: Build APK with Gradle Wrapper
        run: ./gradlew assembleDebug --no-daemon --stacktrace

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: oneui-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
